{"ast":null,"code":"import * as i0 from \"@angular/core\";\nfunction getRandomWord(list) {\n  const randomIndex = Math.floor(Math.random() * list.length);\n  return list[randomIndex];\n}\nexport class WordGeneratorComponent {\n  constructor() {\n    this.word1 = '';\n    this.word2 = '';\n    this.word3 = '';\n    this.subject1 = '';\n    this.subject2 = '';\n    this.imagePath1 = \"\";\n    this.imagePath2 = \"\";\n    this.imagePath3 = \"\";\n    this.isButtonPressed = false;\n    this.mathematics = ['College Algebra', 'Calculus 1', 'Differential Calculus', 'Integral Calculus', 'Linear Algebra', 'Finite Mathematics', 'Mathematical Proof', 'Multivariate Calculus', 'Differential Equations', 'Discrete Mathematics'];\n    this.biology = ['Biology of Sex and Death', 'Organismal Biology', 'Ecology', 'Genetics', 'Microbiology', 'Cell and Molecular Biology', 'Human Anatomy', 'Human Physiology', 'Molecular Evolution', 'Population Dynamics', 'Immunology'];\n    this.computerScience = ['Object Oriented programming', 'Data Structures and Algorithms', 'Computer Org', 'Systems and Networks', 'Objects and Design', 'Operating Systems', 'Languages and Computation', 'Embedded Systems', 'Creative Design'];\n    this.me = ['Rigid Body dynamics', 'System Dynamics', 'Thermodynamics', 'Fluid Mechanics', 'Heat Transfer', 'Internal Combustion Engines', 'Hybrid Vehicle Powertrains', 'Mechanical Vibrations', 'Robotics'];\n    this.problems = ['Climate Change', 'Poverty', 'Healthcare', 'Hunger', 'Education Levels', 'Human Rights', 'Gender Inequality', 'Terrorism', 'Corruption', 'Pollution', 'Disease', 'Internet Privacy'];\n    this.subjects = {};\n    this.subjects = {\n      \"mathematics\": this.mathematics,\n      \"biology\": this.biology,\n      \"computerScience\": this.computerScience,\n      \"me\": this.me\n    };\n  }\n  generateRandomWords() {\n    this.isButtonPressed = true;\n    this.subject1 = this.getRandomSubjectKey();\n    this.subject2 = this.getRandomSubjectKey(this.subject1);\n    this.word1 = getRandomWord(this.subjects[this.subject1]);\n    this.word2 = getRandomWord(this.subjects[this.subject2]);\n    this.word3 = getRandomWord(this.problems);\n    // Construct image paths with multiple formats\n    this.imagePath1 = this.getImagePath(this.word1, this.subject1);\n    this.imagePath2 = this.getImagePath(this.word2, this.subject2);\n    this.imagePath3 = this.getImagePath(this.word3, 'problems');\n  }\n  getImagePath(word, subFolder = '') {\n    const sanitizedWord = word.toLowerCase().replace(/\\s+/g, '');\n    const formats = ['jpeg', 'jpg', 'png', 'webp', 'gif'];\n    let imagePath = '';\n    formats.forEach(format => {\n      const path = `assets/${subFolder}/${sanitizedWord}.${format}`;\n      if (!imagePath && this.imageExists(path)) {\n        imagePath = path;\n      }\n    });\n    return imagePath;\n  }\n  imageExists(url) {\n    const http = new XMLHttpRequest();\n    http.open('HEAD', url, false);\n    http.send();\n    return http.status !== 404;\n  }\n  getRandomSubjectKey(excludeKey = '') {\n    let keys = Object.keys(this.subjects);\n    if (excludeKey) {\n      keys = keys.filter(key => key !== excludeKey);\n    }\n    return keys[Math.floor(Math.random() * keys.length)];\n  }\n  static #_ = this.ɵfac = function WordGeneratorComponent_Factory(t) {\n    return new (t || WordGeneratorComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WordGeneratorComponent,\n    selectors: [[\"app-word-generator\"]],\n    decls: 24,\n    vars: 8,\n    consts: [[1, \"slot-machine-container\"], [1, \"sentence\"], [1, \"reel1\"], [1, \"word\"], [1, \"reel2\"], [1, \"reel3\"], [\"alt\", \"Image 1\", 1, \"image1\", 3, \"src\"], [\"alt\", \"Image 2\", 1, \"image2\", 3, \"src\"], [\"alt\", \"Image 3\", 1, \"image3\", 3, \"src\"], [3, \"click\"]],\n    template: function WordGeneratorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"p\");\n        i0.ɵɵtext(3, \"Using \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"div\", 3);\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\", 1)(8, \"p\");\n        i0.ɵɵtext(9, \" and \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\", 4)(11, \"div\", 3);\n        i0.ɵɵtext(12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 1)(14, \"p\");\n        i0.ɵɵtext(15, \" to solve \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 5)(17, \"div\", 3);\n        i0.ɵɵtext(18);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(19, \"img\", 6)(20, \"img\", 7)(21, \"img\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function WordGeneratorComponent_Template_button_click_22_listener() {\n          return ctx.generateRandomWords();\n        });\n        i0.ɵɵtext(23, \"Generate\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"hidden\", !ctx.isButtonPressed);\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(ctx.word1);\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(ctx.word2);\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(ctx.word3);\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"src\", ctx.imagePath1, i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"src\", ctx.imagePath2, i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"src\", ctx.imagePath3, i0.ɵɵsanitizeUrl);\n      }\n    },\n    styles: [\".slot-machine-container[_ngcontent-%COMP%] {\\n    margin-top: 10%;\\n    display: grid;\\n    grid-template-columns: auto auto auto auto auto auto; \\n    position:absolute;\\n    gap: 10px;\\n    top: 10%;\\n    left: 20%;\\n    width: 60%;\\n    justify-content:center;\\n  \\n  \\n  }\\n\\n  .slot-machine-container.hidden[_ngcontent-%COMP%]{\\n    display: none;\\n  }\\n\\n  .sentence[_ngcontent-%COMP%]{\\n    font-size: 18px;\\n    font-weight: bold;\\n    margin: 5px 0;\\n    width: auto;\\n    text-align: center;\\n  }\\n  \\n  .reel1[_ngcontent-%COMP%] {\\n    display: inline-block;\\n    width: auto;\\n    max-width: 100%;\\n  }\\n\\n  .image1[_ngcontent-%COMP%]{\\n    grid-row: 2;\\n    grid-column: 2;\\n    width: 100%;\\n  }\\n\\n  .reel2[_ngcontent-%COMP%] {\\n    display: inline-block;\\n    width: auto;\\n    max-width: 100%;\\n  }\\n  .image2[_ngcontent-%COMP%]{\\n    grid-row: 2;\\n    grid-column: 4;\\n    width: 100%;\\n  }\\n\\n  .reel3[_ngcontent-%COMP%] {\\n    display: inline-block;\\n    width: auto;\\n    max-width: 100%;\\n  }\\n  .image3[_ngcontent-%COMP%]{\\n    grid-row: 2;\\n    grid-column: 6;\\n    width: 100%;\\n  }\\n  \\n  .word[_ngcontent-%COMP%] {\\n    font-size: 18px;\\n    font-weight: bold;\\n    padding: 10px;\\n    margin: 5px 0;\\n    border: 1px solid #000;\\n    width: auto;\\n    text-align: center;\\n  }\\n  \\n  button[_ngcontent-%COMP%] {\\n    margin-top: 20px;\\n    margin-right: 20px;\\n    font-size: large;\\n    border-radius: 10px;\\n    padding: 15px 30px; \\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvd29yZC1nZW5lcmF0b3Ivd29yZC1nZW5lcmF0b3IuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGVBQWU7SUFDZixhQUFhO0lBQ2Isb0RBQW9EO0lBQ3BELGlCQUFpQjtJQUNqQixTQUFTO0lBQ1QsUUFBUTtJQUNSLFNBQVM7SUFDVCxVQUFVO0lBQ1Ysc0JBQXNCOzs7RUFHeEI7O0VBRUE7SUFDRSxhQUFhO0VBQ2Y7O0VBRUE7SUFDRSxlQUFlO0lBQ2YsaUJBQWlCO0lBQ2pCLGFBQWE7SUFDYixXQUFXO0lBQ1gsa0JBQWtCO0VBQ3BCOztFQUVBO0lBQ0UscUJBQXFCO0lBQ3JCLFdBQVc7SUFDWCxlQUFlO0VBQ2pCOztFQUVBO0lBQ0UsV0FBVztJQUNYLGNBQWM7SUFDZCxXQUFXO0VBQ2I7O0VBRUE7SUFDRSxxQkFBcUI7SUFDckIsV0FBVztJQUNYLGVBQWU7RUFDakI7RUFDQTtJQUNFLFdBQVc7SUFDWCxjQUFjO0lBQ2QsV0FBVztFQUNiOztFQUVBO0lBQ0UscUJBQXFCO0lBQ3JCLFdBQVc7SUFDWCxlQUFlO0VBQ2pCO0VBQ0E7SUFDRSxXQUFXO0lBQ1gsY0FBYztJQUNkLFdBQVc7RUFDYjs7RUFFQTtJQUNFLGVBQWU7SUFDZixpQkFBaUI7SUFDakIsYUFBYTtJQUNiLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsV0FBVztJQUNYLGtCQUFrQjtFQUNwQjs7RUFFQTtJQUNFLGdCQUFnQjtJQUNoQixrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBQ2hCLG1CQUFtQjtJQUNuQixrQkFBa0I7QUFDdEIiLCJzb3VyY2VzQ29udGVudCI6WyIuc2xvdC1tYWNoaW5lLWNvbnRhaW5lciB7XG4gICAgbWFyZ2luLXRvcDogMTAlO1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiBhdXRvIGF1dG8gYXV0byBhdXRvIGF1dG8gYXV0bzsgXG4gICAgcG9zaXRpb246YWJzb2x1dGU7XG4gICAgZ2FwOiAxMHB4O1xuICAgIHRvcDogMTAlO1xuICAgIGxlZnQ6IDIwJTtcbiAgICB3aWR0aDogNjAlO1xuICAgIGp1c3RpZnktY29udGVudDpjZW50ZXI7XG4gIFxuICBcbiAgfVxuXG4gIC5zbG90LW1hY2hpbmUtY29udGFpbmVyLmhpZGRlbntcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG5cbiAgLnNlbnRlbmNle1xuICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBtYXJnaW46IDVweCAwO1xuICAgIHdpZHRoOiBhdXRvO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxuICBcbiAgLnJlZWwxIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgd2lkdGg6IGF1dG87XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICB9XG5cbiAgLmltYWdlMXtcbiAgICBncmlkLXJvdzogMjtcbiAgICBncmlkLWNvbHVtbjogMjtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuXG4gIC5yZWVsMiB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHdpZHRoOiBhdXRvO1xuICAgIG1heC13aWR0aDogMTAwJTtcbiAgfVxuICAuaW1hZ2Uye1xuICAgIGdyaWQtcm93OiAyO1xuICAgIGdyaWQtY29sdW1uOiA0O1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG5cbiAgLnJlZWwzIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgd2lkdGg6IGF1dG87XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICB9XG4gIC5pbWFnZTN7XG4gICAgZ3JpZC1yb3c6IDI7XG4gICAgZ3JpZC1jb2x1bW46IDY7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbiAgXG4gIC53b3JkIHtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgcGFkZGluZzogMTBweDtcbiAgICBtYXJnaW46IDVweCAwO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICMwMDA7XG4gICAgd2lkdGg6IGF1dG87XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG4gIFxuICBidXR0b24ge1xuICAgIG1hcmdpbi10b3A6IDIwcHg7XG4gICAgbWFyZ2luLXJpZ2h0OiAyMHB4O1xuICAgIGZvbnQtc2l6ZTogbGFyZ2U7XG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICBwYWRkaW5nOiAxNXB4IDMwcHg7IFxufVxuXG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"mappings":";AAEA,SAASA,aAAa,CAACC,IAAc;EACnC,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGJ,IAAI,CAACK,MAAM,CAAC;EAC3D,OAAOL,IAAI,CAACC,WAAW,CAAC;AAC1B;AAOA,OAAM,MAAOK,sBAAsB;EAoBjCC;IAnBA,UAAK,GAAW,EAAE;IAClB,UAAK,GAAW,EAAE;IAClB,UAAK,GAAW,EAAE;IAClB,aAAQ,GAAW,EAAE;IACrB,aAAQ,GAAW,EAAE;IACrB,eAAU,GAAW,EAAE;IACvB,eAAU,GAAW,EAAE;IACvB,eAAU,GAAW,EAAE;IACvB,oBAAe,GAAY,KAAK;IAEhC,gBAAW,GAAa,CAAC,iBAAiB,EAAE,YAAY,EAAE,uBAAuB,EAAE,mBAAmB,EAAE,gBAAgB,EAAE,oBAAoB,EAAE,oBAAoB,EAAE,uBAAuB,EAAE,wBAAwB,EAAE,sBAAsB,CAAC;IAChP,YAAO,GAAa,CAAC,0BAA0B,EAAE,oBAAoB,EAAE,SAAS,EAAE,UAAU,EAAE,cAAc,EAAE,4BAA4B,EAAE,eAAe,EAAE,kBAAkB,EAAE,qBAAqB,EAAE,qBAAqB,EAAE,YAAY,CAAC;IAC5O,oBAAe,GAAa,CAAC,6BAA6B,EAAE,gCAAgC,EAAE,cAAc,EAAE,sBAAsB,EAAE,oBAAoB,EAAE,mBAAmB,EAAE,2BAA2B,EAAE,kBAAkB,EAAE,iBAAiB,CAAC;IACpP,OAAE,GAAa,CAAC,qBAAqB,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,eAAe,EAAE,6BAA6B,EAAE,4BAA4B,EAAE,uBAAuB,EAAE,UAAU,CAAC;IAEjN,aAAQ,GAAa,CAAC,gBAAgB,EAAE,SAAS,EAAE,YAAY,EAAE,QAAQ,EAAE,kBAAkB,EAAE,cAAc,EAAE,mBAAmB,EAAE,WAAW,EAAE,YAAY,EAAE,WAAW,EAAE,SAAS,EAAE,kBAAkB,CAAC;IAE1M,aAAQ,GAAgC,EAAE;IAGxC,IAAI,CAACC,QAAQ,GAAG;MACd,aAAa,EAAE,IAAI,CAACC,WAAW;MAC/B,SAAS,EAAE,IAAI,CAACC,OAAO;MACvB,iBAAiB,EAAE,IAAI,CAACC,eAAe;MACvC,IAAI,EAAE,IAAI,CAACC;KACZ;EACH;EAEAC,mBAAmB;IACjB,IAAI,CAACC,eAAe,GAAG,IAAI;IAE3B,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACC,mBAAmB,EAAE;IAC1C,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACD,mBAAmB,CAAC,IAAI,CAACD,QAAQ,CAAC;IAEvD,IAAI,CAACG,KAAK,GAAGnB,aAAa,CAAC,IAAI,CAACS,QAAQ,CAAC,IAAI,CAACO,QAAQ,CAAC,CAAC;IACxD,IAAI,CAACI,KAAK,GAAGpB,aAAa,CAAC,IAAI,CAACS,QAAQ,CAAC,IAAI,CAACS,QAAQ,CAAC,CAAC;IACxD,IAAI,CAACG,KAAK,GAAGrB,aAAa,CAAC,IAAI,CAACsB,QAAQ,CAAC;IAEzC;IACA,IAAI,CAACC,UAAU,GAAG,IAAI,CAACC,YAAY,CAAC,IAAI,CAACL,KAAK,EAAE,IAAI,CAACH,QAAQ,CAAC;IAC9D,IAAI,CAACS,UAAU,GAAG,IAAI,CAACD,YAAY,CAAC,IAAI,CAACJ,KAAK,EAAE,IAAI,CAACF,QAAQ,CAAC;IAC9D,IAAI,CAACQ,UAAU,GAAG,IAAI,CAACF,YAAY,CAAC,IAAI,CAACH,KAAK,EAAE,UAAU,CAAC;EAC7D;EAEAG,YAAY,CAACG,IAAY,EAAEC,YAAoB,EAAE;IAC/C,MAAMC,aAAa,GAAGF,IAAI,CAACG,WAAW,EAAE,CAACC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;IAC5D,MAAMC,OAAO,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC;IACrD,IAAIC,SAAS,GAAG,EAAE;IAClBD,OAAO,CAACE,OAAO,CAACC,MAAM,IAAG;MACvB,MAAMC,IAAI,GAAG,UAAUR,SAAS,IAAIC,aAAa,IAAIM,MAAM,EAAE;MAC7D,IAAI,CAACF,SAAS,IAAI,IAAI,CAACI,WAAW,CAACD,IAAI,CAAC,EAAE;QACxCH,SAAS,GAAGG,IAAI;;IAEpB,CAAC,CAAC;IACF,OAAOH,SAAS;EAClB;EAEAI,WAAW,CAACC,GAAW;IACrB,MAAMC,IAAI,GAAG,IAAIC,cAAc,EAAE;IACjCD,IAAI,CAACE,IAAI,CAAC,MAAM,EAAEH,GAAG,EAAE,KAAK,CAAC;IAC7BC,IAAI,CAACG,IAAI,EAAE;IACX,OAAOH,IAAI,CAACI,MAAM,KAAK,GAAG;EAC5B;EAEA1B,mBAAmB,CAAC2B,aAAqB,EAAE;IACzC,IAAIC,IAAI,GAAGC,MAAM,CAACD,IAAI,CAAC,IAAI,CAACpC,QAAQ,CAAC;IACrC,IAAImC,UAAU,EAAE;MACdC,IAAI,GAAGA,IAAI,CAACE,MAAM,CAACC,GAAG,IAAIA,GAAG,KAAKJ,UAAU,CAAC;;IAE/C,OAAOC,IAAI,CAAC1C,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGwC,IAAI,CAACvC,MAAM,CAAC,CAAC;EACtD;EAAC;qBAvEUC,sBAAsB;EAAA;EAAA;UAAtBA,sBAAsB;IAAA0C;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCZnCC,8BAAuE;QAE5DA,sBAAM;QAAAA,iBAAI;QAEjBA,8BAAmB;QACCA,YAAW;QAAAA,iBAAM;QAErCA,8BAAwB;QAChBA,qBAAI;QAAAA,iBAAI;QAEhBA,+BAAmB;QACCA,aAAW;QAAAA,iBAAM;QAErCA,+BAAwB;QAChBA,2BAAS;QAAAA,iBAAI;QAErBA,+BAAmB;QACCA,aAAW;QAAAA,iBAAM;QAErCA,0BAAqD;QAGzDA,iBAAM;QACJA,kCAAwC;QAAhCA;UAAA,OAASC,yBAAqB;QAAA,EAAC;QAACD,yBAAQ;QAAAA,iBAAS;;;QAvBvBA,8CAAiC;QAK7CA,eAAW;QAAXA,+BAAW;QAMXA,eAAW;QAAXA,+BAAW;QAMXA,eAAW;QAAXA,+BAAW;QAE1BA,eAAkB;QAAlBA,iEAAkB;QAClBA,eAAkB;QAAlBA,iEAAkB;QAClBA,eAAkB;QAAlBA,iEAAkB","names":["getRandomWord","list","randomIndex","Math","floor","random","length","WordGeneratorComponent","constructor","subjects","mathematics","biology","computerScience","me","generateRandomWords","isButtonPressed","subject1","getRandomSubjectKey","subject2","word1","word2","word3","problems","imagePath1","getImagePath","imagePath2","imagePath3","word","subFolder","sanitizedWord","toLowerCase","replace","formats","imagePath","forEach","format","path","imageExists","url","http","XMLHttpRequest","open","send","status","excludeKey","keys","Object","filter","key","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/mikhailliutikov/Documents/cs8803/RandomIssueApproachGenerator/src/app/word-generator/word-generator.component.ts","/Users/mikhailliutikov/Documents/cs8803/RandomIssueApproachGenerator/src/app/word-generator/word-generator.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n\nfunction getRandomWord(list: string[]): string {\n  const randomIndex = Math.floor(Math.random() * list.length);\n  return list[randomIndex];\n}\n\n@Component({\n  selector: 'app-word-generator',\n  templateUrl: './word-generator.component.html',\n  styleUrls: ['./word-generator.component.css']\n})\nexport class WordGeneratorComponent {\n  word1: string = '';\n  word2: string = '';\n  word3: string = '';\n  subject1: string = '';\n  subject2: string = '';\n  imagePath1: string = \"\";\n  imagePath2: string = \"\";\n  imagePath3: string = \"\";\n  isButtonPressed: boolean = false;\n\n  mathematics: string[] = ['College Algebra', 'Calculus 1', 'Differential Calculus', 'Integral Calculus', 'Linear Algebra', 'Finite Mathematics', 'Mathematical Proof', 'Multivariate Calculus', 'Differential Equations', 'Discrete Mathematics'];\n  biology: string[] = ['Biology of Sex and Death', 'Organismal Biology', 'Ecology', 'Genetics', 'Microbiology', 'Cell and Molecular Biology', 'Human Anatomy', 'Human Physiology', 'Molecular Evolution', 'Population Dynamics', 'Immunology'];\n  computerScience: string[] = ['Object Oriented programming', 'Data Structures and Algorithms', 'Computer Org', 'Systems and Networks', 'Objects and Design', 'Operating Systems', 'Languages and Computation', 'Embedded Systems', 'Creative Design'];\n  me: string[] = ['Rigid Body dynamics', 'System Dynamics', 'Thermodynamics', 'Fluid Mechanics', 'Heat Transfer', 'Internal Combustion Engines', 'Hybrid Vehicle Powertrains', 'Mechanical Vibrations', 'Robotics'];\n\n  problems: string[] = ['Climate Change', 'Poverty', 'Healthcare', 'Hunger', 'Education Levels', 'Human Rights', 'Gender Inequality', 'Terrorism', 'Corruption', 'Pollution', 'Disease', 'Internet Privacy'];\n\n  subjects: { [key: string]: string[] } = {};\n\n  constructor() {\n    this.subjects = {\n      \"mathematics\": this.mathematics,\n      \"biology\": this.biology, \n      \"computerScience\": this.computerScience, \n      \"me\": this.me\n    };\n  }\n\n  generateRandomWords(): void {\n    this.isButtonPressed = true;\n\n    this.subject1 = this.getRandomSubjectKey();\n    this.subject2 = this.getRandomSubjectKey(this.subject1);\n\n    this.word1 = getRandomWord(this.subjects[this.subject1]);\n    this.word2 = getRandomWord(this.subjects[this.subject2]);\n    this.word3 = getRandomWord(this.problems);\n\n    // Construct image paths with multiple formats\n    this.imagePath1 = this.getImagePath(this.word1, this.subject1);\n    this.imagePath2 = this.getImagePath(this.word2, this.subject2);\n    this.imagePath3 = this.getImagePath(this.word3, 'problems');\n  }\n\n  getImagePath(word: string, subFolder: string = ''): string {\n    const sanitizedWord = word.toLowerCase().replace(/\\s+/g, '');\n    const formats = ['jpeg', 'jpg', 'png', 'webp', 'gif'];\n    let imagePath = '';\n    formats.forEach(format => {\n      const path = `assets/${subFolder}/${sanitizedWord}.${format}`;\n      if (!imagePath && this.imageExists(path)) {\n        imagePath = path;\n      }\n    });\n    return imagePath;\n  }\n\n  imageExists(url: string): boolean {\n    const http = new XMLHttpRequest();\n    http.open('HEAD', url, false);\n    http.send();\n    return http.status !== 404;\n  }\n\n  getRandomSubjectKey(excludeKey: string = ''): string {\n    let keys = Object.keys(this.subjects);\n    if (excludeKey) {\n      keys = keys.filter(key => key !== excludeKey);\n    }\n    return keys[Math.floor(Math.random() * keys.length)];\n  }\n}\n","<div class=\"slot-machine-container\" [class.hidden]=\"!isButtonPressed\" >\n    <div class = \"sentence\">\n        <p>Using </p>\n    </div>\n    <div class=\"reel1\">\n      <div class=\"word\">{{ word1 }}</div>\n    </div>\n    <div class = \"sentence\">\n        <p> and </p>\n    </div>\n    <div class=\"reel2\">\n      <div class=\"word\">{{ word2 }}</div>\n    </div>\n    <div class = \"sentence\">\n        <p> to solve </p>\n    </div>\n    <div class=\"reel3\">\n      <div class=\"word\">{{ word3 }}</div>\n    </div>\n    <img src={{imagePath1}} alt=\"Image 1\" class=\"image1\">\n    <img src={{imagePath2}} alt=\"Image 2\" class=\"image2\">\n    <img src={{imagePath3}} alt=\"Image 3\" class=\"image3\">\n</div>\n  <button (click)=\"generateRandomWords()\">Generate</button>\n  \n\n    \n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}