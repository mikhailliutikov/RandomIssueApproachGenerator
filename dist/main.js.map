{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/word-generator/word-generator.component.ts","./src/app/word-generator/word-generator.component.html","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'random-word-webpage';\n}\n","<div style=\"text-align:center\">\n  <h1>\n    Welcome to the Issue Approach Generator!\n  </h1>\n  <app-word-generator></app-word-generator>\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { WordGeneratorComponent } from './word-generator/word-generator.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WordGeneratorComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\n\nfunction getRandomWord(list: string[]): string {\n  const randomIndex = Math.floor(Math.random() * list.length);\n  return list[randomIndex];\n}\n\n@Component({\n  selector: 'app-word-generator',\n  templateUrl: './word-generator.component.html',\n  styleUrls: ['./word-generator.component.css']\n})\nexport class WordGeneratorComponent {\n  word1: string = '';\n  word2: string = '';\n  word3: string = '';\n  subject1: string = '';\n  subject2: string = '';\n  imagePath1: string = \"\";\n  imagePath2: string = \"\";\n  imagePath3: string = \"\";\n  isButtonPressed: boolean = false;\n\n  mathematics: string[] = ['College Algebra', 'Calculus 1', 'Differential Calculus', 'Integral Calculus', 'Linear Algebra', 'Finite Mathematics', 'Mathematical Proof', 'Multivariate Calculus', 'Differential Equations', 'Discrete Mathematics'];\n  biology: string[] = ['Biology of Sex and Death', 'Organismal Biology', 'Ecology', 'Genetics', 'Microbiology', 'Cell and Molecular Biology', 'Human Anatomy', 'Human Physiology', 'Molecular Evolution', 'Population Dynamics', 'Immunology'];\n  computerScience: string[] = ['Object Oriented programming', 'Data Structures and Algorithms', 'Computer Org', 'Systems and Networks', 'Objects and Design', 'Operating Systems', 'Languages and Computation', 'Embedded Systems', 'Creative Design'];\n  me: string[] = ['Rigid Body dynamics', 'System Dynamics', 'Thermodynamics', 'Fluid Mechanics', 'Heat Transfer', 'Internal Combustion Engines', 'Hybrid Vehicle Powertrains', 'Mechanical Vibrations', 'Robotics'];\n\n  problems: string[] = ['Climate Change', 'Poverty', 'Healthcare', 'Hunger', 'Education Levels', 'Human Rights', 'Gender Inequality', 'Terrorism', 'Corruption', 'Pollution', 'Disease', 'Internet Privacy'];\n\n  subjects: { [key: string]: string[] } = {};\n\n  constructor() {\n    this.subjects = {\n      \"mathematics\": this.mathematics,\n      \"biology\": this.biology, \n      \"computerScience\": this.computerScience, \n      \"me\": this.me\n    };\n  }\n\n  generateRandomWords(): void {\n    this.isButtonPressed = true;\n\n    this.subject1 = this.getRandomSubjectKey();\n    this.subject2 = this.getRandomSubjectKey(this.subject1);\n\n    this.word1 = getRandomWord(this.subjects[this.subject1]);\n    this.word2 = getRandomWord(this.subjects[this.subject2]);\n    this.word3 = getRandomWord(this.problems);\n\n    // Construct image paths with multiple formats\n    this.imagePath1 = this.getImagePath(this.word1, this.subject1);\n    this.imagePath2 = this.getImagePath(this.word2, this.subject2);\n    this.imagePath3 = this.getImagePath(this.word3, 'problems');\n  }\n\n  getImagePath(word: string, subFolder: string = ''): string {\n    const sanitizedWord = word.toLowerCase().replace(/\\s+/g, '');\n    const formats = ['jpeg', 'jpg', 'png', 'webp', 'gif'];\n    let imagePath = '';\n    formats.forEach(format => {\n      const path = `assets/${subFolder}/${sanitizedWord}.${format}`;\n      if (!imagePath && this.imageExists(path)) {\n        imagePath = path;\n      }\n    });\n    return imagePath;\n  }\n\n  imageExists(url: string): boolean {\n    const http = new XMLHttpRequest();\n    http.open('HEAD', url, false);\n    http.send();\n    return http.status !== 404;\n  }\n\n  getRandomSubjectKey(excludeKey: string = ''): string {\n    let keys = Object.keys(this.subjects);\n    if (excludeKey) {\n      keys = keys.filter(key => key !== excludeKey);\n    }\n    return keys[Math.floor(Math.random() * keys.length)];\n  }\n}\n","<div class=\"slot-machine-container\" [class.hidden]=\"!isButtonPressed\" >\n    <div class = \"sentence\">\n        <p>Using </p>\n    </div>\n    <div class=\"reel1\">\n      <div class=\"word\">{{ word1 }}</div>\n    </div>\n    <div class = \"sentence\">\n        <p> and </p>\n    </div>\n    <div class=\"reel2\">\n      <div class=\"word\">{{ word2 }}</div>\n    </div>\n    <div class = \"sentence\">\n        <p> to solve </p>\n    </div>\n    <div class=\"reel3\">\n      <div class=\"word\">{{ word3 }}</div>\n    </div>\n    <img src={{imagePath1}} alt=\"Image 1\" class=\"image1\">\n    <img src={{imagePath2}} alt=\"Image 2\" class=\"image2\">\n    <img src={{imagePath3}} alt=\"Image 3\" class=\"image3\">\n</div>\n  <button (click)=\"generateRandomWords()\">Generate</button>\n  \n\n    \n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["RouterModule","routes","AppRoutingModule","forRoot","imports","exports","AppComponent","constructor","selectors","decls","vars","consts","template","i0","BrowserModule","WordGeneratorComponent","AppModule","bootstrap","declarations","getRandomWord","list","randomIndex","Math","floor","random","length","subjects","mathematics","biology","computerScience","me","generateRandomWords","isButtonPressed","subject1","getRandomSubjectKey","subject2","word1","word2","word3","problems","imagePath1","getImagePath","imagePath2","imagePath3","word","subFolder","sanitizedWord","toLowerCase","replace","formats","imagePath","forEach","format","path","imageExists","url","http","XMLHttpRequest","open","send","status","excludeKey","keys","Object","filter","key","ctx","__NgCli_bootstrap_1","bootstrapModule","catch","err","console","error"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}